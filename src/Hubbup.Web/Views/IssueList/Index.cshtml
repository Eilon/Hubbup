@model IssueListViewModel

@{
    ViewData["PageTitlePrefix"] = Model.RepoSetName;
    ViewData["GitHubUserName"] = Model.GitHubUserName;
    ViewData["RepoSetNames"] = Model.RepoSetNames;
    ViewData["CurrentRepoSetName"] = Model.RepoSetName;
}

<div class="row">
    <div class="col-md-8">
        <ul class="nav nav-pills" id="app-tabs">
            <li class="active"><a href="#group-by-assignee">Group by assignee</a></li>
            <li class=""><a href="#group-by-milestone">Group by milestone</a></li>
            <li class=""><a href="#group-by-repo">Group by repo</a></li>
        </ul>
    </div>
    <div class="col-md-4 text-right">
        <button class="btn btn-info chevronButton" type="button" data-toggle="collapse" data-target="#reposIncludedGroup">
            <span id="chevronGlyph" class="glyphicon glyphicon-chevron-right"></span>
            Included repos <span class="badge">@Model.MainReposIncluded.Count</span>
        </button>
    </div>
</div>

<br />

<div class="collapse" id="reposIncludedGroup">
    <div class="well">
        @await Html.PartialAsync("_RepoList", Model.MainReposIncluded)

        @await Html.PartialAsync("_MilestoneSummary", Model.MainMilestoneSummary)

        @if (Model.ExtraReposIncluded.Any())
        {
            <hr />

            <h2>Other repos</h2>

            @await Html.PartialAsync("_RepoList", Model.ExtraReposIncluded)

            @await Html.PartialAsync("_MilestoneSummary", Model.ExtraMilestoneSummary)
        }

        @if (Model.MissingRepos.Any())
        {
            <hr />

            <h2>Repos not included</h2>

            @foreach (var missingRepoSet in Model.MissingRepos)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title"><strong>@missingRepoSet.Org</strong> <span class="badge">@missingRepoSet.MissingRepos.Count</span></h3>
                    </div>
                    <div class="panel-body">
                        @if (missingRepoSet.MissingRepos.Count > 0)
                        {
                            @foreach (var repo in missingRepoSet.MissingRepos)
                            {
                                <span class="bg-info" style="padding:5px; margin: 5px; line-height: 2.5em; border: 1px solid #ccc;">
                                    <a style="white-space:nowrap;" href="https://github.com/@missingRepoSet.Org/@repo/issues">@missingRepoSet.Org/@repo</a>
                                </span>
                            }
                        }
                        else
                        {
                            <h3>No missing repos in this org</h3>
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

@foreach (var repoFailure in Model.RepoFailures)
{
    <div class="alert alert-danger"><strong>@repoFailure.Repo.Owner/@repoFailure.Repo.Name</strong>: @repoFailure.FailureMessage</div>
}

<div class="row">
    <div class="col-md-2 col-md-push-10">
        <h3>Issues</h3>
        <div class="alert alert-info" data-toggle="tooltip" data-placement="left" title="Open issues not in Backlog milestone">
            <a href="@Model.OpenIssuesQuery">Open</a> <span class="badge">@Model.TotalIssues</span>
        </div>
        <div class="alert alert-warning" data-toggle="tooltip" data-placement="left" title="Open issues not in a milestone">
            <a href="@Model.UntriagedIssuesQuery">Untriaged</a> <span class="badge">@Model.UntriagedIssues</span>
        </div>
        <div class="alert alert-warning" data-toggle="tooltip" data-placement="left" title="Open issues not assigned">
            <a href="@Model.UnassignedIssuesQuery">Unassigned</a> <span class="badge">@Model.UnassignedIssues</span>
        </div>
        <div class="alert alert-success" data-toggle="tooltip" data-placement="left" title="Open issues with '2 - Working' label">
            <a href="@Model.WorkingIssuesQuery">Working</a> <span class="badge">@Model.WorkingIssues</span>
        </div>
        <h3>PRs</h3>
        <div class="alert alert-success" data-toggle="tooltip" data-placement="left" title="Open PRs">
            <a href="@Model.OpenPRsQuery">Open</a> <span class="badge">@Model.OpenPullRequests</span>
        </div>
        <div class="alert alert-danger" data-toggle="tooltip" data-placement="left" title="Open PRs over 14 days old">
            <a href="@Model.StalePRsQuery">Stale</a> <span class="badge">@Model.StalePullRequests</span>
        </div>
        @if (Model.ExtraLinks != null && Model.ExtraLinks.Count > 0)
        {
            <h3>Links</h3>
            <ul>
                @foreach (var extraLink in Model.ExtraLinks)
                {
                    <li>
                        <a href="@extraLink.Url">@extraLink.Title</a>
                    </li>
                }
            </ul>
        }
    </div>

    <div class="col-md-10 col-md-pull-2">
        <div class="tab-content">
            <div class="tab-pane active" id="group-by-assignee">
                @foreach (var assignee in Model.GroupByAssignee.Assignees)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                <strong>
                                    @if (assignee.IsMetaAssignee)
                                    {
                                        @(assignee.Assignee ?? "<not assigned>")
                                    }
                                    else
                                    {
                                        <a href="https://github.com/issues?utf8=%E2%9C%93&q=is%3Aopen+assignee%3A@(assignee.Assignee)">@(assignee.Assignee)</a>
                                    }
                                </strong>
                            </h3>
                        </div>
                        <div class="panel-body">
                            <h4>Working on issues <span class="badge">@assignee.Issues.Count</span></h4>
                            @if (assignee.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in assignee.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">Not working on any assigned issues</div>
                            }

                            <h4>Pull requests <span class="badge">@assignee.PullRequests.Count</span></h4>
                            @if (assignee.PullRequests.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var pullRequest in assignee.PullRequests)
                                    {
                                        <li class="list-group-item" style="@(pullRequest.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_PullRequest", pullRequest)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">No pull requests created or assigned</div>
                            }

                            <h4>Other assigned issues <span class="badge">@assignee.OtherIssues.Count</span></h4>
                            @if (assignee.OtherIssues.Any())
                            {
                                <div>
                                    <button class="btn btn-info chevronButton" type="button" data-toggle="collapse" data-target="#collapse-otherissues-@TagBuilder.CreateSanitizedId(assignee.Assignee, "_")">
                                        <span id="chevronGlyph" class="glyphicon glyphicon-chevron-right"></span>
                                        Show/hide
                                    </button>
                                </div>

                                <div class="collapse" id="collapse-otherissues-@TagBuilder.CreateSanitizedId(assignee.Assignee, "_")" style="margin-top:10px">
                                    <ul class="list-group">
                                        @foreach (var issue in assignee.OtherIssues)
                                        {
                                            <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                                @await Html.PartialAsync("_Issue", issue)
                                            </li>
                                        }
                                    </ul>
                                </div>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">No other assigned issues</div>
                            }
                        </div>
                    </div>
                }

            </div>

            <div class="tab-pane" id="group-by-milestone">
                @foreach (var milestone in Model.GroupByMilestone.Milestones)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title"><strong>@(milestone.Milestone ?? "<no milestone>")</strong></h3>
                        </div>
                        <div class="panel-body">

                            <h4>Issues being worked on in this milestone <span class="badge">@milestone.Issues.Count</span></h4>
                            @if (milestone.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in milestone.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">Not working on issues in this milestone</div>
                            }

                            <h4>Pull requests in this milestone <span class="badge">@milestone.PullRequests.Count</span></h4>
                            @if (milestone.PullRequests.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var pullRequest in milestone.PullRequests)
                                    {
                                        <li class="list-group-item" style="@(pullRequest.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_PullRequest", pullRequest)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">No pull requests in this milestone</div>
                            }

                        </div>
                    </div>
                }
            </div>

            <div class="tab-pane" id="group-by-repo">
                @foreach (var repo in Model.GroupByRepo.Repos)
                {
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title"><strong>@repo.Repo.Owner/@repo.Repo.Name</strong></h3>
                        </div>
                        <div class="panel-body">

                            <h4>Issues being worked on in this repo <span class="badge">@repo.Issues.Count</span></h4>
                            @if (repo.Issues.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var issue in repo.Issues)
                                    {
                                        <li class="list-group-item" style="@(issue.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_Issue", issue)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">Not working on issues in this repo</div>
                            }

                            <h4>Pull requests in this repo <span class="badge">@repo.PullRequests.Count</span></h4>
                            @if (repo.PullRequests.Any())
                            {
                                <ul class="list-group">
                                    @foreach (var pullRequest in repo.PullRequests)
                                    {
                                        <li class="list-group-item" style="@(pullRequest.IsInAssociatedPersonSet ? "" : "background-color: wheat")">
                                            @await Html.PartialAsync("_PullRequest", pullRequest)
                                        </li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <div style="margin-left: 2em;">No pull requests in this repo</div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div>
    <p class="text-center">Last updated on @Model.LastUpdated | Request took @(Model.PageRequestTime.TotalSeconds)s</p>
    <p class="text-center">Rate limit remaining @Model.LastApiInfo.RateLimit.Remaining / @Model.LastApiInfo.RateLimit.Limit (reset @@ @Model.LastApiInfo.RateLimit.Reset.ToPacificTime().ToString())</p>
</div>

@section scripts
{
    <script type="text/javascript">
        $('#app-tabs a').click(function (e) {
            e.preventDefault()
            $(this).tab('show')
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        });

        $('.chevronButton').click(function () {
            $(this).find('#chevronGlyph').toggleClass('glyphicon-chevron-down glyphicon-chevron-right');
        });
    </script>
}
